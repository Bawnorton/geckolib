plugins {
    id 'fabric-loom' version '1.4-SNAPSHOT'
    id 'java'
    id 'maven-publish'
    id 'com.modrinth.minotaur'
    id 'net.darkhax.curseforgegradle'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

base {
    archivesName = "geckolib-fabric-${minecraft_version}"
}

repositories {
    mavenCentral() {
        content {
            includeGroup "com.google.code.findbugs"
        }
    }
    maven {
        name = "ParchmentMC"
        url = 'https://maven.parchmentmc.org'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${mappings_mc_version}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"

    compileOnly project(':common')
    implementation "com.google.code.findbugs:jsr305:3.0.1" //Provides the Nullable annotations
}

loom {
	accessWidenerPath = project(":common").file("src/main/resources/geckolib.accesswidener")
    runs {
        named("client") {
            client()
            configName = "Fabric Client"
            ideConfigGenerated(true)
            runDir("runs/"+name)
            programArg("--username=Dev")
        }
        named("server") {
            server()
            configName = "Fabric Server"
            ideConfigGenerated(true)
            runDir("runs/"+name)
        }
    }

}

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}

sourcesJar {
    from project(":common").sourceSets.main.allSource
}

processResources {
   from project(":common").sourceSets.main.resources
}

modrinth {
    token = System.getenv("modrinthKey") ?: "Invalid/No API Token Found"
    projectId = '8BmcQJ2H'
    versionNumber = project.version
    versionName = "Fabric ${minecraft_version}"
    uploadFile = tasks.remapJar.exclude("assets/")
    changelog = rootProject.file("changelog.txt").text
    gameVersions = [minecraft_version]
    versionType = "release"
    loaders = ['fabric']
    debugMode = true
    dependencies {
        required.project "fabric-api"
    }

    //https://github.com/modrinth/minotaur#available-properties
}

task publishToCurseForge(type:  net.darkhax.curseforgegradle.TaskPublishCurseForge) {

    group = "publishing"
    apiToken = System.getenv("curseforge.apitoken") ?: "Invalid/No API Token Found"

    def mainFile = upload(388172, tasks.remapJar.exclude("assets/"))
    mainFile.releaseType = "release"
    mainFile.addModLoader("Forge")
    mainFile.addGameVersion(minecraft_version)
    mainFile.addJavaVersion("Java 17")
    mainFile.changelog = rootProject.file("changelog.txt").text
    debugMode = true
    //https://github.com/Darkhax/CurseForgeGradle#available-properties
}

publish.finalizedBy('modrinth', 'publishToCurseForge')